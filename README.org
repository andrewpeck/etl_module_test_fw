#+OPTIONS: ^:nil
#+EXPORT_EXCLUDE_TAGS: noexport
#+TITLE: ETL Test Stand Firmware
* Table of Contents :TOC_4:
  - [[#build-instructions][Build Instructions]]
  - [[#directories][Directories]]
  - [[#updating-register-definitions][Updating Register Definitions]]
  - [[#block-diagram][Block Diagram]]
  - [[#optical-connections][Optical Connections]]
  - [[#hardware-setup][Hardware Setup]]
    - [[#xdma][XDMA]]
    - [[#ethernet][Ethernet]]

** Build Instructions
To build the firmware, simply clone the repository and run:
#+begin_src
make init
make impl
#+end_src
** Directories
#+begin_src
├── README.org     -- This readme
├── Makefile       -- GNU Makefile
├── readout_board  -- Readout Board Firmware
├── etroc          -- ETROC Firmware
├── wrappers       -- Wrappers around IP/Submodules
├── xdc            -- XDC Constraints Files
├── doc            -- Documentation & Images
├── ip             -- Xilinx IP
├── lpgbt-fpga     -- Submodule: LPGBT-FPGA Core
├── gbt-sc         -- Submodule: CERN GBT-SC Core
├── ipbus-firmware -- Submodule: IPBus Firmware
├── Top            -- Hog Projects
└── Hog            -- Hog Build System
#+end_src
** Updating Register Definitions
To update register definitions, you should change the corresponding XML file and then run
#+begin_src
make reg
#+end_src
** Block Diagram
[[file:doc/structure/structure.gv.svg]]
** Optical Connections

|----------------+---------------|
| Function       | Fiber Number  |
|----------------+---------------|
| Downlink       | RX (Fiber 7)  |
| DAQ Uplink     | TX1 (Fiber 6) |
| Trigger Uplink | TX2 (Fiber 5) |
|----------------+---------------|

** Hardware Setup
Details of the hardware setup and a shopping list can be read at [[http://etl-rb.web.cern.ch/Setup/test-stand-shopping/][shopping]].
*** XDMA
We are using the Xilinx PCIE XDMA driver for register access to the KCU105 board. It is configured
for 8 GT/s, 1 lane PCIE (we can expand the number of lanes in the future if needed).

Details of the XDMA setup and installationcan be read at  [[file:doc/XDMA.org][XDMA]].
*** Ethernet

A gigabit ethernet port may also be used for control.

The ethernet interface on your computer can be configured, e.g. with the command:
#+begin_src bash
sudo /sbin/ifconfig eth0 192.168.0.130 netmask 255.255.255.0 broadcast 192.168.0.255
#+end_src

[[file:doc/kcu105.jpg]]

** Notes :noexport:

From: https://www.xilinx.com/support/documentation/user_guides/ug575-ultrascale-pkg-pinout.pdf
#+attr_org: :width 700px
[[file:images/screenshots/2020-11-17_19-54-28_screenshot.png]]


|-----+-----------------+------+----------+--------|
| Pin | Firmware Signal | Bank | QUAD LOC | CH LOC |
|-----+-----------------+------+----------+--------|
| U4  | sfp_tx_p[0]     |  226 | X0Y2     | X0Y10  |
| W4  | sfp_tx_p[1]     |  226 | X0Y2     | X0Y9   |
| N4  | fmc_tx_p[0]     |  227 | X0Y3     | X0Y12  |
| L4  | fmc_tx_p[1]     |  227 | X0Y3     | X0Y13  |
| J4  | fmc_tx_p[2]     |  227 | X0Y3     | X0Y14  |
| G4  | fmc_tx_p[3]     |  227 | X0Y3     | X0Y15  |
| F6  | fmc_tx_p[4]     |  228 | X0Y4     | X0Y16  |
| D6  | fmc_tx_p[5]     |  228 | X0Y4     | X0Y17  |
| C4  | fmc_tx_p[6]     |  228 | X0Y4     | X0Y18  |
| B6  | fmc_tx_p[7]     |  228 | X0Y4     | X0Y19  |
|-----+-----------------+------+----------+--------|
| T2  | sfp_rx_p[0]     |  226 |          |        |
| V2  | sfp_rx_p[1]     |  226 |          |        |
|-----+-----------------+------+----------+--------|
